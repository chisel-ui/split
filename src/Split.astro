---
import { getSafeGutter, sizes, uid } from '@chisel-ui/core'
import './Split.css'
import type { StackProps } from '@chisel-ui/stack/astro'

export type Fraction = 'auto-start' | 'auto-end' | '1/4' | '1/3' | '1/2' | '2/3' | '3/4'

export interface SplitProps extends StackProps {
    fraction?: Fraction
    switchAt?: number | string | keyof sizes
}

const fractions = {
    '1/4': '1fr 3fr',
    '1/3': '1fr 2fr',
    '1/2': '1fr 1fr',
    '2/3': '2fr 1fr',
    '3/4': '3fr 1fr',
    'auto-start': 'auto 1fr',
    'auto-end': '1fr auto'
}

function getBreakpoint(switchAt?: number | string | keyof sizes) {
    if (!switchAt) { return undefined }

    if (switchAt in sizes) { return sizes[switchAt] }

    if (typeof switchAt === 'number') { return `${switchAt}px` }

    return switchAt
}

const { gutter = '0px', theme = {}, as: Tag = 'div', fraction = '1/2', switchAt, style = '', ...props } = Astro.props as StackProps
const id = uid()

const maybeGutter = getSafeGutter(theme, gutter)
const maybeFraction = fractions[fraction] || fractions['1/2']
const maybeBreakpoint = getBreakpoint(switchAt)

const inlineStyle = maybeBreakpoint && `
    @media (min-width: ${maybeBreakpoint}) {
        #${id} {
            --columns: ${maybeFraction};
        }
    }
`
---

<Tag data-chisel-split {id} style={`--gutter: ${maybeGutter};${style}`} {...props}>
    <slot />
</Tag>

{inlineStyle && (
    <style set:html={inlineStyle}></style>
)}
